server {
    listen 80;
    #listen 443 default ssl spdy; # Enable https

    server_name localhost.com;
    root /var/www/site/public;
    sendfile off;
    client_max_body_size 10M;

    # Rewrite to https
    #if ($ssl_protocol = "") {
    #    rewrite ^ https://$server_name$request_uri? permanent;
    #}

    index index.php index.html;

    location / {
        #rewrite ^/admin$ /admin/ permanent; # Example rewrite dir
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

            # With php5-cgi alone:
            #fastcgi_pass 127.0.0.1:9000;
            # With php5-fpm:
            fastcgi_pass unix:/var/run/php5-fpm.sock;
            fastcgi_index index.php;
            include fastcgi_params;
    }


    # Example dir location
    #location /admin/ {
    #    error_page 404 =200 /admin/;
    #    try_files $uri.html $uri $uri/ =404;
    #}

    # Caching for images, disabled here since we are on development
    #location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
    #    expires 30d;
    #    add_header Pragma public;
    #    add_header Cache-Control "public";
    #}

    # HTTPS proxying for HTTP content
    # http://nginx.org/en/docs/http/ngx_http_proxy_module.html

    # SSL Configuration Example
    # ssl on; # Commented out because we need to accept port 80
    #ssl_certificate /etc/nginx/ssl/ssl-unified.crt;
    #ssl_certificate_key /etc/nginx/ssl/ssl.key;

    # Set SSL protocols, Remove SSLv3 which has the POODLE vulnerability
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
}
